# APIC Key, this needs to be vase64 encoded. 
---
apiVersion: v1
kind: Secret
metadata:
  name: aci-user-cert
data:
  user.key: <base64 certificate data>
# The pod, the init container will put the aci metadata in the /root/.aci-meta foder so that pyACI has it locally. 
# User needs to set the list of APIC IPs (for both containers) and the name of the APIC certificate and the user that is associated to it. 
# The vkaci POD will just sleep forever waiting for someone to call the visibility.py script.
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vkaci
  labels:
    app: vkaci
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vkaci
  template:
    metadata:
      labels:
        app: vkaci
    spec:
       containers:
       - name: vkaci
         image: quay.io/camillo/vkaci
         ports:
         - containerPort: 50000
         command: ['sh', '-c', "gunicorn -w 4 -k gevent -b 0.0.0.0:8080 visibility_ui:app" ]
         env:
           - name: MODE
             value: "CLUSTER"
           - name: APIC_IPS
             value: "10.67.185.102,10.67.185.42,10.67.185.41"
           - name: CERT_NAME
             value: "ansible.crt"
           - name: CERT_USER
             value: "ansible"
           - name: TENANT
             value: "calico2"
           - name: VRF
             value: "vrf"
           - name: "NEO4J_URL"
             value: "neo4j://my-neo4j-release-neo4j:7687"
           - name: "NEO4J_BROWSER_URL"
             value: "neo4j://my-neo4j-release-neo4j:7687"
           - name: "NEO4J_USER"
             value: "neo4j"
           - name: "NEO4J_PASSWORD"
             value: "me-change"
         volumeMounts:
           - name: aci-user-cert-volume
             mountPath: /usr/local/etc/aci-cert/
           - name: aci-meta
             mountPath: "/root/.aci-meta"
       initContainers:
       - name: init-vkaci
         image: quay.io/camillo/vkaci-init
         command: ['sh', '-c', "python3 init.py"]
         env:
           - name: APIC_IPS
             value: "10.67.185.102,10.67.185.42,10.67.185.41"
         volumeMounts:
           - name: aci-meta
             mountPath: "/root/.aci-meta"
       volumes:
         - name: aci-user-cert-volume
           secret:
             secretName: aci-user-cert
         - name: aci-meta
           emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: vkaci
spec:
  selector:
    app: vkaci
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080