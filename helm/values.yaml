# Default values for vkaci.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

# VKACI APIC Variables
# All of these will need to be set correctly
apicIps: ""
apicCertName: ""
apicUsername: ""
vrfTenant: ""
vrfName: ""

# The username of the neo4j database. Currently it seems is not supporting changing the default neo4j username so there should be no need to change this value
n4jUser: neo4j 

# Get the APIC key data by encoding your key file as a base64 string
# NOTE: It would have been nice to be able to pass in a filename instead so Helm can do it for us
# but I found no way for Helm to access user files outside of the chart.
apicKeyData: "<base64 certificate data>"

image:
  repository: quay.io/datacenter/vkaci
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "vkaci"

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

#This ire required for OpenShift to run the container as non-root 
securityContext:
  runAsNonRoot: true
  runAsUser: 1000700000
  seccompProfile:
    type: RuntimeDefault

service:
  type: NodePort
  port: 80
  nodePort: 30000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# vkaci currently doesn't support multiple pods in the same cluster yet. 
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Neo4j Chart Settings
neo4j-standalone:
  services:
    default:
      type: NodePort
      #externalIPs:
      #  - 192.168.14.0
      #type: LoadBalancer
      #loadBalancerIP: 192.168.14.0

  neo4j:
    resources:
      cpu: "1"
      memory: "2Gi"
    password: "" # Set a very good password
  volumes:
    data:
      mode: defaultStorageClass
  config:
    dbms.default_database: neo4j
    dbms.config.strict_validation: 'true'